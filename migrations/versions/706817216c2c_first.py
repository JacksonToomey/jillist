"""first

Revision ID: 706817216c2c
Revises:
Create Date: 2017-06-10 09:09:47.353479

"""
from alembic import op
import social_sqlalchemy
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '706817216c2c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('social_auth_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('server_url', sa.String(length=255), nullable=True),
    sa.Column('handle', sa.String(length=255), nullable=True),
    sa.Column('secret', sa.String(length=255), nullable=True),
    sa.Column('issued', sa.Integer(), nullable=True),
    sa.Column('lifetime', sa.Integer(), nullable=True),
    sa.Column('assoc_type', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('server_url', 'handle')
    )
    op.create_table('social_auth_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('code', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', 'email')
    )
    op.create_index(op.f('ix_social_auth_code_code'), 'social_auth_code', ['code'], unique=False)
    op.create_table('social_auth_nonce',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('server_url', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('salt', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('server_url', 'timestamp', 'salt')
    )
    op.create_table('social_auth_partial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('data', social_sqlalchemy.storage.JSONType(), nullable=True),
    sa.Column('next_step', sa.Integer(), nullable=True),
    sa.Column('backend', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_social_auth_partial_token'), 'social_auth_partial', ['token'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('social_auth_usersocialauth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=32), nullable=True),
    sa.Column('extra_data', social_sqlalchemy.storage.JSONType(), nullable=True),
    sa.Column('uid', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_social_auth_usersocialauth_user_id'), 'social_auth_usersocialauth', ['user_id'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('closed', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('duedate', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_closed'), 'task', ['closed'], unique=False)
    op.create_index(op.f('ix_task_description'), 'task', ['description'], unique=False)
    op.create_index(op.f('ix_task_duedate'), 'task', ['duedate'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_duedate'), table_name='task')
    op.drop_index(op.f('ix_task_description'), table_name='task')
    op.drop_index(op.f('ix_task_closed'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_social_auth_usersocialauth_user_id'), table_name='social_auth_usersocialauth')
    op.drop_table('social_auth_usersocialauth')
    op.drop_table('user')
    op.drop_index(op.f('ix_social_auth_partial_token'), table_name='social_auth_partial')
    op.drop_table('social_auth_partial')
    op.drop_table('social_auth_nonce')
    op.drop_index(op.f('ix_social_auth_code_code'), table_name='social_auth_code')
    op.drop_table('social_auth_code')
    op.drop_table('social_auth_association')
    # ### end Alembic commands ###
